{"version":3,"sources":["store.js","components/ShowPreview/ShowPreview.js","ducks/search/actions.js","ducks/search/reducer.js","utils.js","ducks/search/selectors.js","components/Search/Search.js","ducks/shows/actions.js","ducks/shows/reducer.js","ducks/shows/selectors.js","components/ShowPage/ShowPage.js","components/AppRouter/AppRouter.js","ducks/index.js","middlewares/showMiddleware.js","api.js","middlewares/searchMiddleware.js","index.js"],"names":["initialState","ShowPreview","_this$props","this","props","id","name","image","summary","react_default","a","createElement","Col","lg","className","key","Card","react_router_dom","to","concat","src","alt","dangerouslySetInnerHTML","__html","PureComponent","createActions","searchRequest","searchSuccess","searchFailure","series","handleActions","Object","defineProperty","_state","_ref","payload","loading","_handleActions2","error","_ref2","combineReducers","getImage","medium","seriesSelector","createSelector","state","search","map","isLoading","Search","query","handleSearchFieldInput","event","value","target","_this","setState","handleSearchButtonClick","handleKeyPress","Container","Input","type","placeholder","onKeyPress","onChange","Button","onClick","Row","components_ShowPreview_ShowPreview","assign","mapDispatchToProps","withRouter","connect","getShowRequest","getShowSuccess","getShowFailure","show","reducer_handleActions2","showSelector","shows","keys","length","cast","_embedded","person","ShowPage","componentDidMount","match","params","goBack","history","color","index","_this$props2","react","renderShow","AppRouter","react_router","path","component","exact","showMiddleware","store","next","action","toString","showId","fetch","method","mode","then","response","json","dispatch","catch","e","searchMiddleware","createStore","rootReducer","compose","applyMiddleware","window","devToolsExtension","__REDUX_DEVTOOLS_EXTENSION__","f","ReactDOM","render","es","components_AppRouter_AppRouter","document","getElementById"],"mappings":"0QAKeA,2HC2BAC,0LA1BJ,IAAAC,EAC8BC,KAAKC,MAAlCC,EADDH,EACCG,GAAIC,EADLJ,EACKI,KAAMC,EADXL,EACWK,MAAOC,EADlBN,EACkBM,QAEzB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,UAAU,oBAAoBC,IAAKV,GAC7CI,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMF,UAAU,iBACdL,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAE,UAAAC,OAAYd,GAAMS,UAAU,wBACjCR,GAGO,MAATC,GACCE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qBAAqBM,IAAKb,EAAOc,IAAKf,KAIzDG,EAAAC,EAAAC,cAAA,KACEG,UAAU,iBACVQ,wBAAyB,CAAEC,OAAQf,cAnBrBgB,mDCH8BC,YACtD,iBACA,iBACA,kBAHMC,kBAAeC,kBAAeC,kBCEhCC,EAASC,YAAcC,OAAAC,EAAA,EAAAD,CAAA,GAExBJ,EAAgB,SAACM,EAADC,GAAA,OAAAA,EAAWC,UAE9B,IAGIC,EAAUN,aAAaO,EAAA,GAAAN,OAAAC,EAAA,EAAAD,CAAAM,EAExBX,EAAgB,kBAAM,IAFEK,OAAAC,EAAA,EAAAD,CAAAM,EAGxBV,EAAgB,kBAAM,IAHEI,OAAAC,EAAA,EAAAD,CAAAM,EAIxBT,EAAgB,kBAAM,IAJES,IAM3B,GAGIC,EAAQR,YAAcC,OAAAC,EAAA,EAAAD,CAAA,GAEvBH,EAAgB,SAACK,EAADM,GAAA,OAAAA,EAAWJ,UAE9B,MAGaK,cAAgB,CAC7BX,SACAO,UACAE,UC9BWG,EAAW,SAAAlC,GACpB,OAAa,MAATA,EACKA,EAAMmC,OAGR,+HCFEC,EAAiBC,YAC5B,SAAAC,GAAK,OAAIA,EAAMC,OAAOjB,QACtB,SAAAA,GAAM,OACJA,EAAOkB,IAAI,SAAAb,GAAA,IAAG7B,EAAH6B,EAAG7B,GAAIC,EAAP4B,EAAO5B,KAAMC,EAAb2B,EAAa3B,MAAb,MAAmC,CAC5CF,KACAC,OACAE,QAHS0B,EAAoB1B,QAI7BD,MAAOkC,EAASlC,QAITyC,EAAY,SAAAH,GAAK,OAAIA,EAAMC,OAAOV,SAClCE,EAAQ,SAAAO,GAAK,OAAIA,EAAMC,OAAOR,uCCNrCW,oNACJJ,MAAQ,CACNK,MAAO,MAGTC,uBAAyB,SAAAC,GACvB,IAAMC,EAAQD,EAAME,OAAOD,MAC3BE,EAAKC,SAAS,CAAEN,MAAOG,OAGzBI,wBAA0B,WAAM,IACtB/B,EAAkB6B,EAAKnD,MAAvBsB,cACAwB,EAAUK,EAAKV,MAAfK,MAEJA,GAAOxB,EAAcwB,MAG3BQ,eAAiB,SAAAN,GACG,UAAdA,EAAMrC,KACRwC,EAAKE,mGAIA,IACCP,EAAU/C,KAAK0C,MAAfK,MADDhD,EAE8BC,KAAKC,MAAlCyB,EAFD3B,EAEC2B,OAAQmB,EAFT9C,EAES8C,UAAWV,EAFpBpC,EAEoBoC,MAE3B,OACE7B,EAAAC,EAAAC,cAACgD,EAAA,EAAD,KACGX,EACCvC,EAAAC,EAAAC,cAAA,4BAEAF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACbL,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CACEC,KAAK,OACLC,YAAY,0BACZT,MAAOH,EACPa,WAAY5D,KAAKuD,eACjBM,SAAU7D,KAAKgD,yBAEjB1C,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CACEnD,UAAU,cACVoD,QAAS/D,KAAKsD,yBAFhB,WAQDnB,EACC7B,EAAAC,EAAAC,cAAA,WAAM2B,GAEN7B,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAKrD,UAAU,mCACZe,EAAOkB,IAAI,SAAAb,GAAA,IAAG7B,EAAH6B,EAAG7B,GAAIC,EAAP4B,EAAO5B,KAAME,EAAb0B,EAAa1B,QAASD,EAAtB2B,EAAsB3B,MAAtB,OACVE,EAAAC,EAAAC,cAACyD,EAADrC,OAAAsC,OAAA,CAAatD,IAAKV,GAAQ,CAAEA,KAAIC,OAAME,UAASD,uBAtD5CiB,kBAuEf8C,EAAqB,CACzB5C,iBAGa6C,cACbC,YAXsB,SAAA3B,GAAK,MAAK,CAChChB,OAAQc,EAAeE,GACvBG,UAAWA,EAAUH,GACrBP,MAAOA,EAAMO,KAUXyB,EAFFE,CAGEvB,MCtF8DxB,YAChE,mBACA,mBACA,oBAHagD,mBAAgBC,mBAAgBC,mBCMzCC,EAAO9C,YAAcC,OAAAC,EAAA,EAAAD,CAAA,GAEtB2C,EAAiB,SAACzC,EAADC,GAAA,OAAAA,EAAWC,UAE/B,IAGIC,EAAUN,aAAa+C,EAAA,GAAA9C,OAAAC,EAAA,EAAAD,CAAC8C,EAEzBJ,EAAiB,kBAAM,IAFC1C,OAAAC,EAAA,EAAAD,CAAC8C,EAGzBH,EAAiB,kBAAM,IAHC3C,OAAAC,EAAA,EAAAD,CAAC8C,EAIzBF,EAAiB,kBAAM,IAJCE,IAM3B,GAGIvC,EAAQR,YAAcC,OAAAC,EAAA,EAAAD,CAAA,GAEvB4C,EAAiB,SAAC1C,EAADM,GAAA,OAAAA,EAAWJ,UAE/B,MAGaK,cAAgB,CAC7BoC,OACAxC,UACAE,UC/BWwC,EAAelC,YAC1B,SAAAC,GAAK,OAAIA,EAAMkC,MAAMH,MACrB,SAAAA,GACE,GAAiC,IAA7B7C,OAAOiD,KAAKJ,GAAMK,OAAc,OAAOL,EADrC,IAGEtE,EAAoCsE,EAApCtE,KAAMC,EAA8BqE,EAA9BrE,MAAOC,EAAuBoE,EAAvBpE,QAEf0E,EAFsCN,EAAdO,UAEPD,KAAKnC,IAAI,SAAAb,GAAA,IAAGkD,EAAHlD,EAAGkD,OAAH,MAAiB,CAC/C9E,KAAM8E,EAAO9E,KACbC,MAAOkC,EAAS2C,EAAO7E,UAGzB,MAAO,CAAED,OAAMC,MAAOkC,EAASlC,GAAQC,UAAS0E,KAAMA,KAI7ClC,GAAY,SAAAH,GAAK,OAAIA,EAAMkC,MAAM3C,SACjCE,GAAQ,SAAAO,GAAK,OAAIA,EAAMkC,MAAMzC,OCZpC+C,2NACJC,kBAAoB,WAAM,IAAApF,EACUqD,EAAKnD,OAGvCqE,EAJwBvE,EAChBuE,gBADgBvE,EACAqF,MACPC,OAAOnF,OAK1BoF,OAAS,WACPlC,EAAKnD,MAAMsF,QAAQD,oFAGVb,GAAM,IACPtE,EAA+BsE,EAA/BtE,KAAMC,EAAyBqE,EAAzBrE,MAAOC,EAAkBoE,EAAlBpE,QAAS0E,EAASN,EAATM,KAE9B,OACEzE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACbL,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CACE0B,MAAM,UACNzB,QAAS/D,KAAKsF,OACd3E,UAAU,mBAHZ,WAOAL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,oBAAoBR,GAClCG,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBAAiBM,IAAKb,EAAOc,IAAKf,KAGnDG,EAAAC,EAAAC,cAAA,KACEG,UAAU,kBACVQ,wBAAyB,CAAEC,OAAQf,MAIvCC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACbL,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACZoE,EAAKnC,IAAI,SAACqC,EAAQQ,GAAT,OACRnF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,wBAAwBC,IAAK6E,GAC1CnF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SAAIyE,EAAO9E,OAEbG,EAAAC,EAAAC,cAAA,OAAKS,IAAKgE,EAAO7E,MAAOc,IAAK+D,EAAO9E,8CASzC,IAAAuF,EAC4B1F,KAAKC,MAAhC4C,EADD6C,EACC7C,UAAWV,EADZuD,EACYvD,MAAOsC,EADnBiB,EACmBjB,KAE1B,OACEnE,EAAAC,EAAAC,cAACmF,EAAA,SAAD,KACG9C,EACCvC,EAAAC,EAAAC,cAAA,kCACE2B,EACF7B,EAAAC,EAAAC,cAAA,SAAI2B,GAEJnC,KAAK4F,WAAWnB,WA/DHpD,kBA4EjB8C,GAAqB,CACzBG,kBAGaF,eACbC,YAXsB,SAAA3B,GAAK,MAAK,CAChC+B,KAAME,EAAajC,GACnBG,UAAWA,GAAUH,GACrBP,MAAOA,GAAMO,KAUXyB,GAFFE,CAGEa,KCtFEW,2LAEA,OACEvF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACbL,EAAAC,EAAAC,cAACsF,EAAA,EAAD,KACExF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAOC,KAAK,aAAaC,UAAWd,KACpC5E,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAOG,OAAK,EAACF,KAAK,IAAIC,UAAWlD,aANrBzB,kBAaP+C,eAAWyB,ICdbxD,eAAgB,CAAEM,SAAQiC,UCE1BsB,GAAA,SAAAC,GAAK,OAAI,SAAAC,GAAI,OAAI,SAAAC,GAC9B,GAAIA,EAAO3C,OAASY,EAAegC,WAAY,CAC7C,IAAMpG,EAAKmG,EAAOrE,SCDFuE,EDEXrG,ECDPsG,MAAK,+BAAAxF,OAAgCuF,EAAhC,eAAqD,CACxDE,OAAQ,MACRC,KAAM,SACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,UDDxBF,KAAK,SAAAlC,GACJ0B,EAAMW,SAASvC,EAAeE,MAE/BsC,MAAM,SAAAC,GACLb,EAAMW,SAAStC,EAAewC,EAAEV,eCPpB,IAAAC,EDWlB,OAAOH,EAAKC,MEhBCY,GAAA,SAAAd,GAAK,OAAI,SAAAC,GAAI,OAAI,SAAAC,GAC1BA,EAAO3C,OAASnC,EAAc+E,YDJd,SAAAvD,GAAK,OACzByD,MAAK,wCAAAxF,OAAyC+B,GAAS,CACrD0D,OAAQ,MACRC,KAAM,SAELC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAA/B,GAAK,OAAIA,EAAMhC,IAAI,SAAA6B,GAAI,OAAIA,EAAKA,SCAtC9B,CADc0D,EAAOrE,SAElB2E,KAAK,SAAAjF,GACJyE,EAAMW,SAAStF,EAAcE,MAE9BqF,MAAM,SAAAC,GACLb,EAAMW,SAASrF,EAAcuF,EAAEV,eAIrC,OAAOF,EAAKC,MCPRF,GhBFJe,YACEC,GACAtH,EACAuH,YACEC,YAAgBJ,GAAkBf,IAClCoB,OAAOC,kBAAoBD,OAAOE,+BAAiC,SAAAC,GAAC,OAAIA,KgBD9EC,IAASC,OACPrH,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAUzB,MAAOA,IACf7F,EAAAC,EAAAC,cAACqH,GAAD,QAGJC,SAASC,eAAe","file":"static/js/main.5dd3e09b.chunk.js","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './ducks';\r\nimport showMiddleware from './middlewares/showMiddleware';\r\nimport searchMiddleware from './middlewares/searchMiddleware';\r\n\r\nexport default initialState =>\r\n  createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(searchMiddleware, showMiddleware),\r\n      window.devToolsExtension ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\r\n    ),\r\n  );\r\n","import React, { PureComponent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, Card } from 'reactstrap';\r\nimport './ShowPreview.scss';\r\n\r\nclass ShowPreview extends PureComponent {\r\n  render() {\r\n    const { id, name, image, summary } = this.props;\r\n\r\n    return (\r\n      <Col lg=\"6\" className=\"preview t-preview\" key={id}>\r\n        <Card className=\"preview__card\">\r\n          <Link to={`/shows/${id}`} className=\"preview__link t-link\">\r\n            {name}\r\n          </Link>\r\n\r\n          {image != null && (\r\n            <div className=\"preview__image\">\r\n              <img className=\"preview__image-pic\" src={image} alt={name} />\r\n            </div>\r\n          )}\r\n\r\n          <p\r\n            className=\"preview__descr\"\r\n            dangerouslySetInnerHTML={{ __html: summary }}\r\n          />\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowPreview;\r\n","import { createActions } from 'redux-actions';\r\n\r\nconst { searchRequest, searchSuccess, searchFailure } = createActions(\r\n  'SEARCH_REQUEST',\r\n  'SEARCH_SUCCESS',\r\n  'SEARCH_FAILURE'\r\n);\r\n\r\nexport { searchRequest, searchSuccess, searchFailure };\r\n","import { combineReducers } from 'redux';\r\nimport { handleActions } from 'redux-actions';\r\nimport { searchRequest, searchSuccess, searchFailure } from './actions';\r\n\r\nconst series = handleActions(\r\n  {\r\n    [searchSuccess]: (_state, { payload }) => payload\r\n  },\r\n  []\r\n);\r\n\r\nconst loading = handleActions(\r\n  {\r\n    [searchRequest]: () => true,\r\n    [searchSuccess]: () => false,\r\n    [searchFailure]: () => false\r\n  },\r\n  false\r\n);\r\n\r\nconst error = handleActions(\r\n  {\r\n    [searchFailure]: (_state, { payload }) => payload\r\n  },\r\n  null\r\n);\r\n\r\nexport default combineReducers({\r\n  series,\r\n  loading,\r\n  error\r\n});\r\n","export const getImage = image => {\r\n    if (image != null) {\r\n      return image.medium;\r\n    }\r\n  \r\n    return 'https://vignette.wikia.nocookie.net/the-darkest-minds/images/4/47/Placeholder.png/revision/latest?cb=20160927044640';\r\n  };","import { getImage } from '../../utils.js';\r\nimport { createSelector } from 'reselect';\r\n\r\nexport const seriesSelector = createSelector(\r\n  state => state.search.series,\r\n  series =>\r\n    series.map(({ id, name, image, summary }) => ({\r\n      id,\r\n      name,\r\n      summary,\r\n      image: getImage(image)\r\n    }))\r\n);\r\n\r\nexport const isLoading = state => state.search.loading;\r\nexport const error = state => state.search.error;\r\n","import React, { PureComponent } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport ShowPreview from 'components/ShowPreview';\r\nimport { seriesSelector, isLoading, error, searchRequest } from 'ducks/search';\r\nimport { Container, Button, Input } from 'reactstrap';\r\nimport { Row } from 'reactstrap';\r\nimport './Search.scss';\r\n\r\nclass Search extends PureComponent {\r\n  state = {\r\n    query: ''\r\n  };\r\n\r\n  handleSearchFieldInput = event => {\r\n    const value = event.target.value;\r\n    this.setState({ query: value });\r\n  };\r\n\r\n  handleSearchButtonClick = () => {\r\n    const { searchRequest } = this.props;\r\n    const { query } = this.state;\r\n\r\n    if (query) searchRequest(query);\r\n  };\r\n\r\n  handleKeyPress = event => {\r\n    if (event.key === 'Enter') {\r\n      this.handleSearchButtonClick();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { query } = this.state;\r\n    const { series, isLoading, error } = this.props;\r\n\r\n    return (\r\n      <Container>\r\n        {isLoading ? (\r\n          <div>Searching ...</div>\r\n        ) : (\r\n          <div className=\"search\">\r\n            <div className=\"search__header\">\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Type name of the series\"\r\n                value={query}\r\n                onKeyPress={this.handleKeyPress}\r\n                onChange={this.handleSearchFieldInput}\r\n              />\r\n              <Button\r\n                className=\"search__btn\"\r\n                onClick={this.handleSearchButtonClick}\r\n              >\r\n                Search\r\n              </Button>\r\n            </div>\r\n\r\n            {error ? (\r\n              <div>{error}</div>\r\n            ) : (\r\n              <Row className=\"search__preview t-search-result\">\r\n                {series.map(({ id, name, summary, image }) => (\r\n                  <ShowPreview key={id} {...{ id, name, summary, image }} />\r\n                ))}\r\n              </Row>\r\n            )}\r\n          </div>\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  series: seriesSelector(state),\r\n  isLoading: isLoading(state),\r\n  error: error(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  searchRequest\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Search)\r\n);\r\n","import { createActions } from 'redux-actions';\r\n\r\nexport const { getShowRequest, getShowSuccess, getShowFailure } = createActions(\r\n  'GET_SHOW_REQUEST',\r\n  'GET_SHOW_SUCCESS',\r\n  'GET_SHOW_FAILURE'\r\n);\r\n","import { combineReducers } from 'redux';\r\nimport { handleActions } from 'redux-actions';\r\nimport {\r\n  getShowRequest,\r\n  getShowSuccess,\r\n  getShowFailure\r\n} from './actions';\r\n\r\nconst show = handleActions(\r\n  {\r\n    [getShowSuccess]: (_state, { payload }) => payload\r\n  },\r\n  {}\r\n);\r\n\r\nconst loading = handleActions(\r\n  {\r\n    [getShowRequest]: () => true,\r\n    [getShowSuccess]: () => false,\r\n    [getShowFailure]: () => false\r\n  },\r\n  true\r\n);\r\n\r\nconst error = handleActions(\r\n  {\r\n    [getShowFailure]: (_state, { payload }) => payload\r\n  },\r\n  null\r\n);\r\n\r\nexport default combineReducers({\r\n  show,\r\n  loading,\r\n  error\r\n});\r\n","import { getImage } from '../../utils.js';\r\nimport { createSelector } from 'reselect';\r\n\r\nexport const showSelector = createSelector(\r\n  state => state.shows.show,\r\n  show => {\r\n    if (Object.keys(show).length === 0) return show;\r\n\r\n    const { name, image, summary, _embedded } = show;\r\n\r\n    const cast = _embedded.cast.map(({ person }) => ({\r\n      name: person.name,\r\n      image: getImage(person.image)\r\n    }));\r\n\r\n    return { name, image: getImage(image), summary, cast: cast };\r\n  }\r\n);\r\n\r\nexport const isLoading = state => state.shows.loading;\r\nexport const error = state => state.shows.error;\r\n","import React, { PureComponent, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getShowRequest, showSelector, isLoading, error } from 'ducks/shows';\r\nimport { Button } from 'reactstrap';\r\nimport './show-page.scss';\r\nimport './cast.scss';\r\n\r\nclass ShowPage extends PureComponent {\r\n  componentDidMount = () => {\r\n    const { getShowRequest, match } = this.props;\r\n    const id = match.params.id;\r\n\r\n    getShowRequest(id);\r\n  };\r\n\r\n  goBack = () => {\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  renderShow(show) {\r\n    const { name, image, summary, cast } = show;\r\n\r\n    return (\r\n      <div className=\"show-page\">\r\n        <div className=\"show-page__top\">\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={this.goBack}\r\n            className=\"show-page__link\"\r\n          >\r\n            Go back\r\n          </Button>\r\n          <h1 className=\"show-page__title\">{name}</h1>\r\n          <div className=\"show-page__pic\">\r\n            <img className=\"show-page__img\" src={image} alt={name} />\r\n          </div>\r\n\r\n          <p\r\n            className=\"show-page__text\"\r\n            dangerouslySetInnerHTML={{ __html: summary }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"cast\">\r\n          <h2>Cast</h2>\r\n          <div className=\"cast__body\">\r\n            {cast.map((person, index) => (\r\n              <div className=\"cast__person t-person\" key={index}>\r\n                <h3>\r\n                  <p>{person.name}</p>\r\n                </h3>\r\n                <img src={person.image} alt={person.name} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, error, show } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        {isLoading ? (\r\n          <div>Retrieving data ...</div>\r\n        ) : error ? (\r\n          <p>{error}</p>\r\n        ) : (\r\n          this.renderShow(show)\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  show: showSelector(state),\r\n  isLoading: isLoading(state),\r\n  error: error(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getShowRequest\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(ShowPage)\r\n);\r\n","import React, { PureComponent } from 'react';\r\nimport { Route, Switch, withRouter } from 'react-router-dom';\r\nimport Search from 'components/Search';\r\nimport ShowPage from 'components/ShowPage';\r\nimport './AppRouter.scss';\r\n\r\nclass AppRouter extends PureComponent {\r\n    render() {\r\n      return (\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route path=\"/shows/:id\" component={ShowPage} />\r\n            <Route exact path=\"*\" component={Search} />\r\n          </Switch>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withRouter(AppRouter);\r\n","import { combineReducers } from 'redux';\r\n\r\nimport search from 'ducks/search';\r\nimport shows from 'ducks/shows';\r\n\r\nexport default combineReducers({ search, shows });\r\n","import { show } from '../api';\r\nimport {\r\n  getShowRequest,\r\n  getShowSuccess,\r\n  getShowFailure\r\n} from 'ducks/shows';\r\n\r\nexport default store => next => action => {\r\n  if (action.type === getShowRequest.toString()) {\r\n    const id = action.payload;\r\n    show(id)\r\n      .then(show => {\r\n        store.dispatch(getShowSuccess(show));\r\n      })\r\n      .catch(e => {\r\n        store.dispatch(getShowFailure(e.toString()));\r\n      });\r\n  }\r\n\r\n  return next(action);\r\n};\r\n","export const search = query =>\r\n  fetch(`http://api.tvmaze.com/search/shows?q=${query}`, {\r\n    method: 'GET',\r\n    mode: 'cors',\r\n  })\r\n    .then(response => response.json())\r\n    .then(shows => shows.map(show => show.show));\r\n\r\nexport const show = showId =>\r\n  fetch(`http://api.tvmaze.com/shows/${showId}?embed=cast`, {\r\n    method: 'GET',\r\n    mode: 'cors',\r\n  }).then(response => response.json());\r\n","import { search } from '../api';\r\nimport { searchRequest, searchSuccess, searchFailure } from 'ducks/search';\r\n\r\nexport default store => next => action => {\r\n  if (action.type === searchRequest.toString()) {\r\n    const query = action.payload;\r\n    search(query)\r\n      .then(series => {\r\n        store.dispatch(searchSuccess(series));\r\n      })\r\n      .catch(e => {\r\n        store.dispatch(searchFailure(e.toString()));\r\n      });\r\n  }\r\n\r\n  return next(action);\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport AppRouter from 'components/AppRouter';\r\nimport getStore from './store';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nconst store = getStore();\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <AppRouter />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}